{"version":3,"sources":["../src/app.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAS,OAAT,CAAiB,0BAAjB;AACA,IAAI,MAAM,wBAAV;AACA,IAAI,SAAS,kBAAQ,MAAR,EAAb;AACA,OAAO,GAAP,CAAW,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB,CAE9B,CAFD;;AAIA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAjB;AACA,IAAI,MAAJ,CAAW,OAAX,EAAoB,cAAI,UAAxB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAsB,MAAtB;;;;AAIA,IAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,6BAAR;AACA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,eAAK,IAAL,CAAU,SAAV,EAAoB,QAApB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR;AACA,IAAI,GAAJ,CAAQ,QAAR;;;AAKA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC/B,MAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,MAAI,MAAJ,GAAa,GAAb;AACA,OAAK,GAAL;AACD,CAJD;;;;;;AAUA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpC,MAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,QAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,eAAS,IAAI,OADK;AAElB,aAAO;AAFW,KAApB;AAID,GAND;AAOD;;;;AAID,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,MAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,aAAS,IAAI,OADK;AAElB,WAAO;AAFW,GAApB;AAID,CAND;;AAQA,IAAI,MAAJ,CAAW,IAAX,EAAgB,WAAhB,EAA4B,UAAC,OAAD,EAAa;AACvC,UAAQ,GAAR;AACD,CAFD;;kBAIe,M","file":"app.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport path from 'path';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport index from './routes/index.js';\nimport users from './routes/users.js';\nimport ejs from 'ejs';\n\nmongoose.connect('mongodb://localhost/test');\nlet app = express();\nlet router = express.Router();\nrouter.use((req, res, next) => {\n\n});\n// view engine setup\napp.set('views', path.join(__dirname, 'views/'));\napp.engine('.html', ejs.renderFile);\napp.set('view engine','html');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname,'public')));\n\napp.use('/', index);\napp.use('/users', users);\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\napp.listen(3000,'localhost',(message) => {\n  console.log(`listen on port 3000`);\n});\n\nexport default router;\n"]}